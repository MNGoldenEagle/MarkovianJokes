// <auto-generated />
using Markov_Jokes.Cache;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Markov_Jokes.Migrations
{
    [DbContext(typeof(CacheContext))]
    [Migration("20190609055721_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Markov_Jokes.Cache.Model.Joke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contents")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Jokes");
                });

            modelBuilder.Entity("Markov_Jokes.Cache.Model.Weight", b =>
                {
                    b.Property<long>("WordId");

                    b.Property<long>("FollowingWordId");

                    b.Property<int>("FollowingWordId1");

                    b.Property<int>("Occurrences");

                    b.Property<int>("WordId1");

                    b.HasKey("WordId", "FollowingWordId");

                    b.HasIndex("FollowingWordId1");

                    b.HasIndex("WordId1");

                    b.ToTable("Weights");
                });

            modelBuilder.Entity("Markov_Jokes.Cache.Model.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<int>("StartCount");

                    b.HasKey("Id");

                    b.HasAlternateKey("Content");

                    b.HasIndex("Content")
                        .IsUnique();

                    b.ToTable("Words");
                });

            modelBuilder.Entity("Markov_Jokes.Cache.Model.Weight", b =>
                {
                    b.HasOne("Markov_Jokes.Cache.Model.Word", "FollowingWord")
                        .WithMany()
                        .HasForeignKey("FollowingWordId1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Markov_Jokes.Cache.Model.Word", "Word")
                        .WithMany()
                        .HasForeignKey("WordId1")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
